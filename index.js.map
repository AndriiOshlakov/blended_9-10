{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/local-storage-api.js","../src/js/tasks.js","../src/js/markup-tasks.js","../src/js/render-tasks.js","../src/js/theme-switcher.js","../src/main.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  titleInput: document.querySelector('input[name=\"taskName\"]'),\n  descInput: document.querySelector('input[name=\"taskDescription\"]'),\n  taskList: document.querySelector('#task-list'),\n  themeToggleBtn: document.querySelector('#themeToggle'),\n  body: document.body,\n};\n","const TASKS_KEY = 'tasks';\nconst THEME_KEY = 'theme';\n\nexport const localStorageApi = {\n  saveTasks(tasks) {\n    localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n  },\n  loadTasks() {\n    return JSON.parse(localStorage.getItem(TASKS_KEY)) || [];\n  },\n  saveTheme(theme) {\n    localStorage.setItem(THEME_KEY, theme);\n  },\n  loadTheme() {\n    return localStorage.getItem(THEME_KEY) || 'light';\n  },\n};\n","import { localStorageApi } from './local-storage-api.js';\n\nlet tasks = localStorageApi.loadTasks();\n\nexport function addTask(title, description) {\n  const task = {\n    id: Date.now().toString(),\n    title,\n    description,\n  };\n  tasks.push(task);\n  localStorageApi.saveTasks(tasks);\n  return task;\n}\n\nexport function deleteTask(id) {\n  tasks = tasks.filter(task => task.id !== id);\n  localStorageApi.saveTasks(tasks);\n}\n\nexport function getTasks() {\n  return tasks;\n}\n","import { refs } from './refs.js';\nimport { getTasks } from './tasks.js';\n\nexport function renderTasks() {\n  refs.taskList.innerHTML = '';\n\n  const markup = getTasks()\n    .map(\n      ({ id, title, description }) => `\n        <li data-id=\"${id}\">\n          <h3>${title}</h3>\n          <p>${description}</p>\n          <button class=\"delete-btn\">Delete</button>\n        </li>`\n    )\n    .join('');\n\n  refs.taskList.insertAdjacentHTML('beforeend', markup);\n}\n","import { deleteTask } from './tasks.js';\nimport { renderTasks } from './markup-tasks.js';\n\nexport function handleDeleteClick(e) {\n  if (e.target.classList.contains('delete-btn')) {\n    const id = e.target.closest('li').dataset.id;\n    deleteTask(id);\n    renderTasks();\n  }\n}\n","import { localStorageApi } from './local-storage-api';\nimport { refs } from './refs';\n\nexport function changeTheme() {\n  const isDark = refs.body.classList.toggle('dark');\n  localStorageApi.saveTheme(isDark ? 'dark' : 'light');\n}\n\nexport function applySavedTheme() {\n  const saved = localStorageApi.loadTheme();\n  if (saved === 'dark') {\n    refs.body.classList.add('dark');\n  }\n}\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\nimport { refs } from './js/refs.js';\nimport { addTask } from './js/tasks.js';\nimport { handleDeleteClick } from './js/render-tasks.js';\nimport { changeTheme } from './js/theme-switcher.js';\nimport { applySavedTheme } from './js/theme-switcher.js';\nimport { renderTasks } from './js/markup-tasks.js';\n\n// INIT\nrenderTasks();\napplySavedTheme();\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const title = refs.titleInput.value.trim();\n  const desc = refs.descInput.value.trim();\n\n  if (!title || !desc) return;\n\n  addTask(title, desc);\n  renderTasks();\n\n  refs.titleInput.value = '';\n  refs.descInput.value = '';\n});\n\nrefs.taskList.addEventListener('click', handleDeleteClick);\n\nrefs.themeToggleBtn.addEventListener('click', changeTheme);\n"],"names":["refs","TASKS_KEY","THEME_KEY","localStorageApi","tasks","theme","addTask","title","description","task","deleteTask","id","getTasks","renderTasks","markup","handleDeleteClick","changeTheme","isDark","applySavedTheme","event","desc"],"mappings":"ssBAAO,MAAMA,EAAO,CAClB,KAAM,SAAS,cAAc,YAAY,EACzC,WAAY,SAAS,cAAc,wBAAwB,EAC3D,UAAW,SAAS,cAAc,+BAA+B,EACjE,SAAU,SAAS,cAAc,YAAY,EAC7C,eAAgB,SAAS,cAAc,cAAc,EACrD,KAAM,SAAS,IACjB,ECPMC,EAAY,QACZC,EAAY,QAELC,EAAkB,CAC7B,UAAUC,EAAO,CACf,aAAa,QAAQH,EAAW,KAAK,UAAUG,CAAK,CAAC,CACtD,EACD,WAAY,CACV,OAAO,KAAK,MAAM,aAAa,QAAQH,CAAS,CAAC,GAAK,EACvD,EACD,UAAUI,EAAO,CACf,aAAa,QAAQH,EAAWG,CAAK,CACtC,EACD,WAAY,CACV,OAAO,aAAa,QAAQH,CAAS,GAAK,OAC3C,CACH,ECdA,IAAIE,EAAQD,EAAgB,YAErB,SAASG,EAAQC,EAAOC,EAAa,CAC1C,MAAMC,EAAO,CACX,GAAI,KAAK,IAAK,EAAC,SAAU,EACzB,MAAAF,EACA,YAAAC,CACJ,EACE,OAAAJ,EAAM,KAAKK,CAAI,EACfN,EAAgB,UAAUC,CAAK,EACxBK,CACT,CAEO,SAASC,EAAWC,EAAI,CAC7BP,EAAQA,EAAM,OAAOK,GAAQA,EAAK,KAAOE,CAAE,EAC3CR,EAAgB,UAAUC,CAAK,CACjC,CAEO,SAASQ,GAAW,CACzB,OAAOR,CACT,CCnBO,SAASS,GAAc,CAC5Bb,EAAK,SAAS,UAAY,GAE1B,MAAMc,EAASF,EAAU,EACtB,IACC,CAAC,CAAE,GAAAD,EAAI,MAAAJ,EAAO,YAAAC,CAAa,IAAK;AAAA,uBACfG,CAAE;AAAA,gBACTJ,CAAK;AAAA,eACNC,CAAW;AAAA;AAAA,cAGrB,EACA,KAAK,EAAE,EAEVR,EAAK,SAAS,mBAAmB,YAAac,CAAM,CACtD,CCfO,SAASC,EAAkB,EAAG,CACnC,GAAI,EAAE,OAAO,UAAU,SAAS,YAAY,EAAG,CAC7C,MAAMJ,EAAK,EAAE,OAAO,QAAQ,IAAI,EAAE,QAAQ,GAC1CD,EAAWC,CAAE,EACbE,GACD,CACH,CCNO,SAASG,GAAc,CAC5B,MAAMC,EAASjB,EAAK,KAAK,UAAU,OAAO,MAAM,EAChDG,EAAgB,UAAUc,EAAS,OAAS,OAAO,CACrD,CAEO,SAASC,GAAkB,CAClBf,EAAgB,cAChB,QACZH,EAAK,KAAK,UAAU,IAAI,MAAM,CAElC,CCWAa,IACAK,IAEAlB,EAAK,KAAK,iBAAiB,SAAUmB,GAAS,CAC5CA,EAAM,eAAc,EAEpB,MAAMZ,EAAQP,EAAK,WAAW,MAAM,KAAI,EAClCoB,EAAOpB,EAAK,UAAU,MAAM,KAAI,EAElC,CAACO,GAAS,CAACa,IAEfd,EAAQC,EAAOa,CAAI,EACnBP,IAEAb,EAAK,WAAW,MAAQ,GACxBA,EAAK,UAAU,MAAQ,GACzB,CAAC,EAEDA,EAAK,SAAS,iBAAiB,QAASe,CAAiB,EAEzDf,EAAK,eAAe,iBAAiB,QAASgB,CAAW"}